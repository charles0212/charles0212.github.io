{"title":"深入理解Disruptor","slug":"yuque/深入理解Disruptor","date":"2016-09-05T16:00:00.000Z","updated":"2022-05-15T04:19:28.491Z","comments":true,"path":"api/articles/disruptor/understanding-disruptor.json","excerpt":"> Disruptor 是 LMAX> 公司开源的一个高效的内存无锁队列，一个高性能的异步处理框架，或者可以认为是最快的消息框架(轻量的> JMS)，也可以认为是一个观察者模式实现，或者事件-监听模式的实现，直接称> disruptor> 模式。disruptor> 最大特点是高性能，其 LMAX> 架构可以获得每秒 6 百万订单，用 1> 微秒的延迟获得吞吐量为 100K+。理解> Disruptor> 的原理，可以帮助我们更好的理解内存无锁，CAS，volatile，缓冲行等并发原理。本文主要从以下方面介绍disruptor：1、Disruptor 概念和Rin","covers":["/images/c3.jpg"],"content":"<blockquote>\n<p>Disruptor 是 LMAX 公司开源的一个高效的内存无锁队列，一个高性能的异步处理框架，或者可以认为是最快的消息框架(轻量的 JMS)，也可以认为是一个观察者模式实现，或者事件-监听模式的实现，直接称 disruptor 模式。disruptor 最大特点是高性能，其 LMAX 架构可以获得每秒 6 百万订单，用 1 微秒的延迟获得吞吐量为 100K+。理解 Disruptor 的原理，可以帮助我们更好的理解内存无锁，CAS，volatile，缓冲行等并发原理。</p>\n</blockquote>\n<p>本文主要从以下方面介绍 disruptor：<br>1、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer/\">Disruptor 概念和 RingBuffer 数据结构</a><br>2、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-read/\">RingBuffer 读取</a><br>3、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-single-write/\">RingBuffer 单生产者写入</a><br>4、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-muti-write/\">RingBuffer 多生产者写入</a><br>5、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-practise/\">Disruptor 的 DSL 实践</a><br>6、相关的性能比较</p>\n","more":"<blockquote>\n<p>Disruptor 是 LMAX 公司开源的一个高效的内存无锁队列，一个高性能的异步处理框架，或者可以认为是最快的消息框架(轻量的 JMS)，也可以认为是一个观察者模式实现，或者事件-监听模式的实现，直接称 disruptor 模式。disruptor 最大特点是高性能，其 LMAX 架构可以获得每秒 6 百万订单，用 1 微秒的延迟获得吞吐量为 100K+。理解 Disruptor 的原理，可以帮助我们更好的理解内存无锁，CAS，volatile，缓冲行等并发原理。</p>\n</blockquote>\n<p>本文主要从以下方面介绍 disruptor：<br>1、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer/\">Disruptor 概念和 RingBuffer 数据结构</a><br>2、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-read/\">RingBuffer 读取</a><br>3、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-single-write/\">RingBuffer 单生产者写入</a><br>4、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-ringbuffer-muti-write/\">RingBuffer 多生产者写入</a><br>5、<a href=\"https://www.alicharles.com/article/disruptor/disruptor-practise/\">Disruptor 的 DSL 实践</a><br>6、相关的性能比较</p>\n","categories":[{"name":"disruptor","path":"api/categories/disruptor.json"}],"tags":[{"name":"Disruptor","path":"api/tags/Disruptor.json"},{"name":"Java","path":"api/tags/Java.json"}]}