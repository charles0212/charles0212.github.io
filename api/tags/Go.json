{"name":"Go","postlist":[{"title":"设计模式与GO","slug":"yuque/设计模式与GO","date":"2021-05-31T16:00:00.000Z","updated":"2022-05-15T04:55:51.000Z","comments":true,"path":"api/articles/design-pattern/go-design-pattern.json","excerpt":"> 原文链接：https://refactoringguru.cn/design-patterns/go> 代码可见：https://github.com/charles0212/design-patterns创建型模式创建型模式 模式描述 抽象工厂AbstractFactory，让你能创建一系列相关的对象，而无需指定其具体类。 生成器Builder，使你能够分步骤创建复杂对象。该模式允许你使用相同的创建代码生成不同类型和形式的对象。工厂方法 FactoryMethod，在父类中提供一个创建对象的接口以允许子类决定实例化对象的类型。原型Prototype，让你","keywords":null,"cover":["/images/c2.jpg"],"content":null,"raw":null,"categories":[{"name":"design-pattern","path":"api/categories/design-pattern.json"}],"tags":[{"name":"设计模式","path":"api/tags/设计模式.json"},{"name":"Go","path":"api/tags/Go.json"}]}]}