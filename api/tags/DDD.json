{"name":"DDD","postlist":[{"title":"DDD（三）洋葱架构","slug":"yuque/DDD（三）洋葱架构","date":"2021-09-04T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/onion-architecture.json","excerpt":"> 原文：https://herbertograca.com/2017/09/21/onion-architecture/> >> https://www.jianshu.com/p/d87d5389c92a这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和思考，以及我是如何运用这些知识的。如果你阅读了这个系列中之前的文章，本篇文章的的内容将更有意义。2008 年 JeffreyPalermo提出了洋葱架构。在我看来，它在端口和适配器架构的基础上贯彻了将领域放在应用中心，将传达机制(UI)和系统使用的基","keywords":null,"cover":["/images/c3.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]},{"title":"DDD（二）端口和适配器架构","slug":"yuque/DDD（二）端口和适配器架构","date":"2021-09-02T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/ports-adapters-architecture.json","excerpt":"> 原文链接：https://herbertograca.com/2017/09/14/ports-adapters-architecture/> 转载：https://www.jianshu.com/p/f39f4537857e这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和思考，以及我是如何运用这些知识的。如果你阅读了这个系列中之前的文章，本篇文章的的内容将更有意义。2005 年，AlistairCockburn 构思了端口和适配器架构(又称六边形架构)并记录在他的博客中。下面这句话就是他对该架构的","keywords":null,"cover":["/images/c1.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]},{"title":"DDD（五）CQRS","slug":"yuque/DDD（五）CQRS","date":"2021-09-09T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/cqrs-architecture.json","excerpt":"> 原文：https://herbertograca.com/2017/10/19/from-cqs-to-cqrs/> >> https://www.jianshu.com/p/ab3843093903这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和思考，以及我是如何运用这些知识的。如果你阅读了这个系列中之前的文章，本篇文章的的内容将更有意义。如果我们的应用以数据为中心，比如，仅实现基本的CRUD操作而把业务流程(例如，哪些数据需要修改，应按什么顺序修改)留给用户；其优点是用户可以在无需改变应用的情","keywords":null,"cover":["/images/c2.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]},{"title":"DDD（六）清晰架构","slug":"yuque/DDD（六）清晰架构","date":"2021-09-11T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/explicit-architecture.json","excerpt":"> 原文：https://herbertograca.com/2017/11/16/explicit-architecture-01-ddd-hexagonal-onion-clean-cqrs-how-i-put-it-all-together/> >> https://www.jianshu.com/p/4cf50cf3e127> 清晰架构（Explicit> Architecture）： 融合> DDD、六边形架构、洋葱架构、整洁架构、CQRS这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和","keywords":null,"cover":["/images/c3.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]},{"title":"DDD（一）核心概念","slug":"yuque/DDD（一）核心概念","date":"2021-08-31T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/core-concept.json","excerpt":"> 原文：https://herbertograca.com/2017/09/07/domain-driven-design/> 转载：https://www.jianshu.com/p/812636d55677这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和思考，以及我是如何运用这些知识的。如果你阅读了这个系列中之前的文章，本篇文章的的内容将更有意义。> Eric Evans 于 2003> 年出版了精采绝伦的《领域驱动设计：软件核心复杂性应对之道》，在书中他创造了领域驱动设计方法。Eric> Ev","keywords":null,"cover":["/images/c1.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]},{"title":"DDD（四）整洁架构","slug":"yuque/DDD（四）整洁架构","date":"2021-09-07T16:00:00.000Z","updated":"2022-05-15T04:19:28.000Z","comments":true,"path":"api/articles/ddd/clean-architecture.json","excerpt":"> 原文：https://herbertograca.com/2017/09/28/clean-architecture-standing-on-the-shoulders-of-giants/> >> https://www.jianshu.com/p/b565f0c00c0c这篇文章是软件架构编年史(译)的一部分，这部编年史由一系列关于软件架构的文章组成。在这一系列文章中，我将写下我对软件架构的学习和思考，以及我是如何运用这些知识的。如果你阅读了这个系列中之前的文章，本篇文章的的内容将更有意义。Robert C.Martin(大名鼎鼎的 UncleBob)于 2012年在他","keywords":null,"cover":["/images/c2.jpg"],"content":null,"raw":null,"categories":[{"name":"ddd","path":"api/categories/ddd.json"}],"tags":[{"name":"DDD","path":"api/tags/DDD.json"}]}]}